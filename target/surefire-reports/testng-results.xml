<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-21T20:47:27 EET" name="TestAutomation - TestSuite" finished-at="2022-03-21T20:48:03 EET" duration-ms="36170">
    <groups>
    </groups>
    <test started-at="2022-03-21T20:47:27 EET" name="Test" finished-at="2022-03-21T20:48:03 EET" duration-ms="36170">
      <class name="testPackage.LandingPageTest">
        <test-method is-config="true" signature="getDriver()[pri:0, instance:testPackage.LandingPageTest@2fb8d338]" started-at="2022-03-21T20:47:27 EET" name="getDriver" finished-at="2022-03-21T20:47:32 EET" duration-ms="4965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method signature="validateLandingPageIsDisplayed()[pri:1, instance:testPackage.LandingPageTest@2fb8d338]" started-at="2022-03-21T20:47:32 EET" name="validateLandingPageIsDisplayed" description="Landing Page | Check that landing page is displayed after navigating to the website" finished-at="2022-03-21T20:47:32 EET" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLandingPageIsDisplayed -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:testPackage.LandingPageTest@2fb8d338]" started-at="2022-03-21T20:47:32 EET" name="takeScreenShotOnFailure" finished-at="2022-03-21T20:47:32 EET" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLandingPageIsDisplayed status=SUCCESS method=LandingPageTest.validateLandingPageIsDisplayed()[pri:1, instance:testPackage.LandingPageTest@2fb8d338] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- testPackage.LandingPageTest -->
      <class name="testPackage.CreateAccountPageTest">
        <test-method is-config="true" signature="getDriver()[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:32 EET" name="getDriver" finished-at="2022-03-21T20:47:37 EET" duration-ms="4224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method signature="validateRegistrationPageIsDisplayed()[pri:2, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:37 EET" name="validateRegistrationPageIsDisplayed" description="Registration Page | Check that registration page is displayed " finished-at="2022-03-21T20:47:38 EET" duration-ms="1124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistrationPageIsDisplayed -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:38 EET" name="takeScreenShotOnFailure" finished-at="2022-03-21T20:47:38 EET" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegistrationPageIsDisplayed status=SUCCESS method=CreateAccountPageTest.validateRegistrationPageIsDisplayed()[pri:2, instance:testPackage.CreateAccountPageTest@4f586b3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="getDriver()[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:38 EET" name="getDriver" finished-at="2022-03-21T20:47:42 EET" duration-ms="4078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method signature="validateMandatoryFieldsOnRegistration()[pri:3, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:42 EET" name="validateMandatoryFieldsOnRegistration" description="Registration Page | Check that warning message is displayed when user misses to input a value in a mandatory field" finished-at="2022-03-21T20:47:43 EET" duration-ms="1332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMandatoryFieldsOnRegistration -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:43 EET" name="takeScreenShotOnFailure" finished-at="2022-03-21T20:47:43 EET" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMandatoryFieldsOnRegistration status=SUCCESS method=CreateAccountPageTest.validateMandatoryFieldsOnRegistration()[pri:3, instance:testPackage.CreateAccountPageTest@4f586b3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="getDriver()[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:43 EET" name="getDriver" finished-at="2022-03-21T20:47:47 EET" duration-ms="4014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method signature="validatePasswordMatchingOnRegistration()[pri:4, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:47 EET" name="validatePasswordMatchingOnRegistration" description="Registration Page | Check that warning message is displayed when user inputs pswd1 different from pswd2" finished-at="2022-03-21T20:47:49 EET" duration-ms="1408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePasswordMatchingOnRegistration -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:49 EET" name="takeScreenShotOnFailure" finished-at="2022-03-21T20:47:49 EET" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordMatchingOnRegistration status=SUCCESS method=CreateAccountPageTest.validatePasswordMatchingOnRegistration()[pri:4, instance:testPackage.CreateAccountPageTest@4f586b3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="getDriver()[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:49 EET" name="getDriver" finished-at="2022-03-21T20:47:53 EET" duration-ms="4162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method signature="validatePasswordComplexityOnRegistration()[pri:5, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:53 EET" name="validatePasswordComplexityOnRegistration" description="Registration Page | Check that warning message is displayed when user inputs a weak password" finished-at="2022-03-21T20:47:54 EET" duration-ms="1264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePasswordComplexityOnRegistration -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:54 EET" name="takeScreenShotOnFailure" finished-at="2022-03-21T20:47:54 EET" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordComplexityOnRegistration status=SUCCESS method=CreateAccountPageTest.validatePasswordComplexityOnRegistration()[pri:5, instance:testPackage.CreateAccountPageTest@4f586b3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="getDriver()[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:54 EET" name="getDriver" finished-at="2022-03-21T20:47:58 EET" duration-ms="4021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method signature="validateValidRegistration()[pri:6, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:47:58 EET" name="validateValidRegistration" description="Registration Page | Check that after successful registration the user gets a registration success message and can search for a product and assert on the result set" finished-at="2022-03-21T20:48:03 EET" duration-ms="4730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateValidRegistration -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:testPackage.CreateAccountPageTest@4f586b3b]" started-at="2022-03-21T20:48:03 EET" name="takeScreenShotOnFailure" finished-at="2022-03-21T20:48:03 EET" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateValidRegistration status=SUCCESS method=CreateAccountPageTest.validateValidRegistration()[pri:6, instance:testPackage.CreateAccountPageTest@4f586b3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- testPackage.CreateAccountPageTest -->
    </test> <!-- Test -->
  </suite> <!-- TestAutomation - TestSuite -->
</testng-results>
